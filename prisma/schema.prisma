// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(cuid())
  clerkId String @unique

  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  products  Product[]
  customers Customer[]
  orders    Order[]
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  orders Order[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  variants Variant[]

  Order Order[]
}

model Variant {
  id        String  @id @default(cuid())
  name      String
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Order {
  id          String      @id @default(cuid())
  totalAmount Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  userId      String

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String

  items Product[]
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}
