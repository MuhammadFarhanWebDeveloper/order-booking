// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(cuid())
  clerkId String @unique

  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  products  Product[]
  customers Customer[]
  orders    Order[]
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  orders Order[]
}

model Order {
  id          String      @id @default(cuid())
  totalAmount Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())

  user        User        @relation(fields: [userId], references: [id])
  userId      String

  customer    Customer    @relation(fields: [customerId], references: [id])
  customerId  String

  items       OrderItem[] // Relation to OrderItem
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  category    Category         // ðŸ”¥ Enum for category
  price       Float
  unit        Unit             // ðŸ”¥ Enum for unit

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  userId      String

  orderItems  OrderItem[] // Backrelation
}

enum Category {
  ELECTRONICS
  GROCERY
  CLOTHING
  STATIONERY
  BEAUTY
  FURNITURE
  TOYS
  MEDICINE
  OTHER
}

enum Unit {
  PIECE
  GRAM
  KILOGRAM
  LITRE
  MILLILITRE
  METER
  CENTIMETER
  BOX
  PACK
}


model OrderItem {
  id        String   @id @default(cuid())

  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String

  product   Product  @relation(fields: [productId], references: [id])
  productId String

  quantity  Int      @default(1)
  price     Float    // Price at the time of order
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}
